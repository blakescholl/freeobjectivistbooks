var search_data = {"index":{"searchIndex":["admin","campaigntargetscontroller","donationscontroller","eventscontroller","pledgescontroller","referralscontroller","requestscontroller","reviewscontroller","testimonialscontroller","userscontroller","admincontroller","adminhelper","announcementmailer","applicationcontroller","applicationhelper","applicationmailer","applicationmailerhelper","campaignmailer","campaigntarget","donation","donationscontroller","errorscontroller","event","eventmailer","falseclass","flagscontroller","forbiddenexception","geocoder","hash","homecontroller","integer","location","locationscontroller","mailgun","base","campaign","messagescontroller","messageshelper","metrics","nilclass","passwordscontroller","pledge","profilecontroller","referral","reminder","reminderentity","reminderjob","remindermailer","reminders","confirmreceipt","confirmreceiptunsent","fulfillpledge","readbooks","sendbooks","request","requestscontroller","requestshelper","review","sessionscontroller","statusescontroller","string","testcontroller","testimonial","testimonialscontroller","time","trueclass","unauthorizedexception","user","authtokenexpired","authtokeninvalid","usermailer","userscontroller","active?()","active?()","add()","address_components()","address_required?()","admin_user_link()","all()","all_key_entities()","all_key_entities()","all_key_entities()","all_key_entities()","all_key_entities()","all_key_entities()","all_reminders()","allowed_users()","allowed_users()","allowed_users()","allowed_users()","allowed_users()","allowed_users()","announcement()","attributes()","attributes=()","auth_token()","authenticate()","base_url()","base_url()","book_leaderboard()","breakdown_by_time()","build_update_event()","campaign_for_method()","campaign_limit_error?()","can_cancel?()","can_cancel?()","can_flag?()","can_request?()","can_send?()","can_send?()","can_update?()","cancel()","cancel()","cancel()","cancel()","cancel_donation_event()","cancel_request_event()","check_user()","client()","client()","client()","confirm_receipt()","confirm_receipt_unsent()","count_digits()","count_referrals()","country()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create_location_if_needed()","current_donation()","current_donor()","current_is_donor?()","current_is_student?()","current_request()","current_student()","default_user()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","donate()","donation()","donation_metrics()","donation_status()","donation_summary()","donor()","donor()","donor()","donor_can_cancel?()","donor_cannot_be_requester()","donors_with_unsent_books()","edit()","edit()","edit()","event_detail()","exception()","find()","find_by_auth_token()","find_by_email()","find_current_user()","find_or_create()","first_geocoder_result()","fix()","fix()","fix_event()","flag()","flag_event()","flag_message()","format_address()","format_block()","format_number()","formatted_address()","from()","from_donor?()","from_student?()","fulfill_pledge()","fulfilled?()","geocode()","geocode!()","geometry()","grant()","grant_event()","granted?()","has_more?()","home()","in_transit?()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","is_duplicate?()","key_entity()","key_entity()","key_entity()","key_entity()","key_entity()","key_entity()","last()","lat()","latest_reminder()","limit_and_offset()","load()","load_models()","load_models()","load_models()","load_models()","locality?()","location()","log()","logger()","login()","lon()","mail_for_event()","mail_to_user()","mark_read_books()","mark_received_books()","mark_sent_books()","markdown()","markdown_renderer()","max_reminders()","max_reminders()","max_reminders()","max_reminders()","max_reminders()","max_reminders()","message_event()","message_or_detail_must_be_present()","min_interval()","min_interval()","min_interval()","min_interval()","min_interval()","min_interval()","more_link()","name_must_have_proper_format()","needs_address?()","needs_fix?()","needs_sending?()","needs_thanks?()","new()","new()","new()","new()","new()","new()","new_for_entity()","new_for_entity()","new_for_entity()","new_for_entity()","new_for_entity()","new_for_entity()","noop()","not_found()","notice()","notification()","notified()","notified!()","notified?()","notify()","now()","open?()","other_user()","parse_params()","parse_params()","parse_params()","parse_params()","parse_params()","password()","password=()","past_reminder_count()","path()","perform()","pipeline_breakdown()","pledge()","pledge_metrics()","pledge_referrals()","pluralize_omit_1()","pluralize_omit_number()","populate()","populate()","prune_campaigns()","prune_if_needed_and_add()","prune_if_needed_and_create()","read()","read?()","read_at()","read_books()","reading?()","reason()","received?()","received_at()","redirect_destination()","referral_counts()","referral_metrics()","referral_metrics_keys()","reminder_mail()","render_error()","render_forbidden()","render_form()","render_not_found()","render_unauthorized()","reply_to_thanks()","request_pipeline()","request_referrals()","request_reset()","request_summary()","require_can_cancel()","require_can_request()","require_login()","require_status()","require_unsent_for_cancel()","requires_message?()","reset_password()","save()","schedule_reminders()","search()","seen_signup()","send_all_reminders()","send_all_reminders()","send_books()","send_campaign()","send_campaign_to_group()","send_campaign_to_target()","send_reminders()","send_to_target()","send_to_target()","sent?()","sent_at()","set_current_user()","show()","show()","since()","site()","spoof()","status()","status()","status()","status_detail()","status_headline()","store_referral()","stub()","student()","student()","student()","student_can_cancel?()","student_club_announcement()","subhash()","tag()","thank_your_donor()","time_columns()","times()","title()","to()","to_bool()","to_bool()","to_bool()","to_bool()","to_bool()","to_donor?()","to_s()","to_student?()","to_testimonial()","to_testimonial()","to_testimonial()","too_soon?()","too_soon?()","too_soon?()","too_soon?()","too_soon?()","touch_device?()","type_name()","types()","unfulfilled()","until()","update()","update()","update()","update()","update()","update_detail()","update_event()","update_status()","update_status_event()","update_thanked()","updated_at_for_status()","user()","user_referrals()","user_tagline()","validate_auth()","verifier()","words()","readme_for_app"],"longSearchIndex":["admin","admin::campaigntargetscontroller","admin::donationscontroller","admin::eventscontroller","admin::pledgescontroller","admin::referralscontroller","admin::requestscontroller","admin::reviewscontroller","admin::testimonialscontroller","admin::userscontroller","admincontroller","adminhelper","announcementmailer","applicationcontroller","applicationhelper","applicationmailer","applicationmailerhelper","campaignmailer","campaigntarget","donation","donationscontroller","errorscontroller","event","eventmailer","falseclass","flagscontroller","forbiddenexception","geocoder","hash","homecontroller","integer","location","locationscontroller","mailgun","mailgun::base","mailgun::campaign","messagescontroller","messageshelper","metrics","nilclass","passwordscontroller","pledge","profilecontroller","referral","reminder","reminderentity","reminderjob","remindermailer","reminders","reminders::confirmreceipt","reminders::confirmreceiptunsent","reminders::fulfillpledge","reminders::readbooks","reminders::sendbooks","request","requestscontroller","requestshelper","review","sessionscontroller","statusescontroller","string","testcontroller","testimonial","testimonialscontroller","time","trueclass","unauthorizedexception","user","user::authtokenexpired","user::authtokeninvalid","usermailer","userscontroller","donation#active?()","request#active?()","mailgun::base::add()","location#address_components()","request#address_required?()","adminhelper#admin_user_link()","mailgun::base::all()","reminder::all_key_entities()","reminders::confirmreceipt::all_key_entities()","reminders::confirmreceiptunsent::all_key_entities()","reminders::fulfillpledge::all_key_entities()","reminders::readbooks::all_key_entities()","reminders::sendbooks::all_key_entities()","reminder::all_reminders()","applicationcontroller#allowed_users()","donationscontroller#allowed_users()","flagscontroller#allowed_users()","messagescontroller#allowed_users()","requestscontroller#allowed_users()","statusescontroller#allowed_users()","announcementmailer#announcement()","mailgun::base#attributes()","mailgun::base#attributes=()","user#auth_token()","user#authenticate()","geocoder::base_url()","mailgun::base::base_url()","metrics#book_leaderboard()","metrics#breakdown_by_time()","request#build_update_event()","applicationmailer::campaign_for_method()","mailgun::campaign::campaign_limit_error?()","donation#can_cancel?()","request#can_cancel?()","donation#can_flag?()","user#can_request?()","donation#can_send?()","reminder#can_send?()","request#can_update?()","donation#cancel()","donationscontroller#cancel()","request#cancel()","requestscontroller#cancel()","eventmailer#cancel_donation_event()","eventmailer#cancel_request_event()","applicationcontroller#check_user()","geocoder::client()","mailgun::base::client()","mailgun::base#client()","remindermailer#confirm_receipt()","remindermailer#confirm_receipt_unsent()","applicationhelper#count_digits()","metrics#count_referrals()","location#country()","admin::campaigntargetscontroller#create()","admin::testimonialscontroller#create()","donationscontroller#create()","flagscontroller#create()","mailgun::base::create()","mailgun::base#create()","messagescontroller#create()","requestscontroller#create()","sessionscontroller#create()","userscontroller#create()","user#create_location_if_needed()","requestshelper#current_donation()","requestshelper#current_donor()","requestshelper#current_is_donor?()","requestshelper#current_is_student?()","requestshelper#current_request()","requestshelper#current_student()","event#default_user()","admin::campaigntargetscontroller#destroy()","admin::testimonialscontroller#destroy()","admin::userscontroller#destroy()","donationscontroller#destroy()","flagscontroller#destroy()","mailgun::base#destroy()","requestscontroller#destroy()","sessionscontroller#destroy()","userscontroller#donate()","reminder#donation()","metrics#donation_metrics()","statusescontroller#donation_status()","applicationhelper#donation_summary()","donation#donor()","event#donor()","request#donor()","donation#donor_can_cancel?()","donation#donor_cannot_be_requester()","user::donors_with_unsent_books()","admin::testimonialscontroller#edit()","requestscontroller#edit()","statusescontroller#edit()","donationscontroller#event_detail()","testcontroller#exception()","mailgun::base::find()","user::find_by_auth_token()","user::find_by_email()","applicationcontroller#find_current_user()","mailgun::campaign::find_or_create()","location#first_geocoder_result()","donation#fix()","flagscontroller#fix()","eventmailer#fix_event()","donation#flag()","eventmailer#flag_event()","donation#flag_message()","applicationhelper#format_address()","applicationhelper#format_block()","applicationhelper#format_number()","location#formatted_address()","event#from()","event#from_donor?()","event#from_student?()","remindermailer#fulfill_pledge()","pledge#fulfilled?()","geocoder::geocode()","location#geocode!()","location#geometry()","request#grant()","eventmailer#grant_event()","request#granted?()","applicationhelper#has_more?()","homecontroller#home()","donation#in_transit?()","admin::campaigntargetscontroller#index()","admin::eventscontroller#index()","admin::pledgescontroller#index()","admin::referralscontroller#index()","admin::requestscontroller#index()","admin::reviewscontroller#index()","admin::testimonialscontroller#index()","admin::userscontroller#index()","admincontroller#index()","donationscontroller#index()","homecontroller#index()","locationscontroller#index()","requestscontroller#index()","testimonialscontroller#index()","user#is_duplicate?()","reminder#key_entity()","reminders::confirmreceipt#key_entity()","reminders::confirmreceiptunsent#key_entity()","reminders::fulfillpledge#key_entity()","reminders::readbooks#key_entity()","reminders::sendbooks#key_entity()","mailgun::campaign::last()","location#lat()","reminder#latest_reminder()","applicationcontroller#limit_and_offset()","mailgun::base#load()","admin::testimonialscontroller#load_models()","applicationcontroller#load_models()","testimonialscontroller#load_models()","userscontroller#load_models()","location#locality?()","location#location()","event#log()","reminderjob#logger()","user::login()","location#lon()","eventmailer::mail_for_event()","applicationmailer#mail_to_user()","announcementmailer#mark_read_books()","announcementmailer#mark_received_books()","announcementmailer#mark_sent_books()","applicationhelper#markdown()","applicationhelper#markdown_renderer()","reminder#max_reminders()","reminders::confirmreceipt#max_reminders()","reminders::confirmreceiptunsent#max_reminders()","reminders::fulfillpledge#max_reminders()","reminders::readbooks#max_reminders()","reminders::sendbooks#max_reminders()","eventmailer#message_event()","event#message_or_detail_must_be_present()","reminder#min_interval()","reminders::confirmreceipt#min_interval()","reminders::confirmreceiptunsent#min_interval()","reminders::fulfillpledge#min_interval()","reminders::readbooks#min_interval()","reminders::sendbooks#min_interval()","applicationhelper#more_link()","user#name_must_have_proper_format()","donation#needs_address?()","donation#needs_fix?()","donation#needs_sending?()","request#needs_thanks?()","admin::testimonialscontroller#new()","applicationcontroller::new()","flagscontroller#new()","mailgun::base::new()","messagescontroller#new()","requestscontroller#new()","reminder::new_for_entity()","reminders::confirmreceipt::new_for_entity()","reminders::confirmreceiptunsent::new_for_entity()","reminders::fulfillpledge::new_for_entity()","reminders::readbooks::new_for_entity()","reminders::sendbooks::new_for_entity()","testcontroller#noop()","errorscontroller#not_found()","statusescontroller#notice()","eventmailer#notification()","event#notified()","event#notified!()","event#notified?()","event#notify()","metrics#now()","request#open?()","requestshelper#other_user()","admin::eventscontroller#parse_params()","applicationcontroller#parse_params()","passwordscontroller#parse_params()","requestscontroller#parse_params()","sessionscontroller#parse_params()","mailgun::base::password()","user#password=()","reminder#past_reminder_count()","mailgun::base::path()","reminderjob#perform()","metrics#pipeline_breakdown()","reminder#pledge()","metrics#pledge_metrics()","metrics#pledge_referrals()","applicationhelper#pluralize_omit_1()","applicationhelper#pluralize_omit_number()","event#populate()","review#populate()","mailgun::campaign::prune_campaigns()","mailgun::campaign::prune_if_needed_and_add()","mailgun::campaign::prune_if_needed_and_create()","userscontroller#read()","donation#read?()","donation#read_at()","remindermailer#read_books()","donation#reading?()","donationscontroller#reason()","donation#received?()","donation#received_at()","statusescontroller#redirect_destination()","metrics#referral_counts()","metrics#referral_metrics()","metrics#referral_metrics_keys()","remindermailer#reminder_mail()","applicationcontroller#render_error()","applicationcontroller#render_forbidden()","messagescontroller#render_form()","applicationcontroller#render_not_found()","applicationcontroller#render_unauthorized()","announcementmailer#reply_to_thanks()","metrics#request_pipeline()","metrics#request_referrals()","passwordscontroller#request_reset()","applicationhelper#request_summary()","donationscontroller#require_can_cancel()","requestscontroller#require_can_request()","applicationcontroller#require_login()","statusescontroller#require_status()","requestscontroller#require_unsent_for_cancel()","event#requires_message?()","usermailer#reset_password()","applicationcontroller#save()","reminderjob::schedule_reminders()","user::search()","userscontroller#seen_signup()","reminderjob::send_all_reminders()","reminderjob#send_all_reminders()","remindermailer#send_books()","applicationmailer::send_campaign()","campaignmailer::send_campaign_to_group()","campaignmailer::send_campaign_to_target()","reminderjob#send_reminders()","applicationmailer::send_to_target()","remindermailer::send_to_target()","donation#sent?()","donation#sent_at()","applicationcontroller#set_current_user()","admin::donationscontroller#show()","profilecontroller#show()","time::since()","mailgun::base::site()","admin::userscontroller#spoof()","donation#status()","request#status()","statusescontroller#status()","applicationhelper#status_detail()","applicationhelper#status_headline()","applicationcontroller#store_referral()","mailgun::base::stub()","donation#student()","event#student()","request#student()","donation#student_can_cancel?()","campaignmailer#student_club_announcement()","hash#subhash()","referral#tag()","announcementmailer#thank_your_donor()","metrics#time_columns()","metrics#times()","applicationhelper#title()","event#to()","falseclass#to_bool()","integer#to_bool()","nilclass#to_bool()","string#to_bool()","trueclass#to_bool()","event#to_donor?()","reminder#to_s()","event#to_student?()","event#to_testimonial()","pledge#to_testimonial()","review#to_testimonial()","reminder#too_soon?()","reminders::confirmreceipt#too_soon?()","reminders::confirmreceiptunsent#too_soon?()","reminders::fulfillpledge#too_soon?()","reminders::readbooks#too_soon?()","applicationhelper#touch_device?()","reminder::type_name()","location#types()","pledge::unfulfilled()","time::until()","admin::testimonialscontroller#update()","admin::userscontroller#update()","passwordscontroller#update()","requestscontroller#update()","statusescontroller#update()","user#update_detail()","eventmailer#update_event()","donation#update_status()","eventmailer#update_status_event()","event#update_thanked()","donation#updated_at_for_status()","mailgun::base::user()","metrics#user_referrals()","applicationhelper#user_tagline()","passwordscontroller#validate_auth()","user::verifier()","string#words()",""],"info":[["Admin","","Admin.html","",""],["Admin::CampaignTargetsController","","Admin/CampaignTargetsController.html","",""],["Admin::DonationsController","","Admin/DonationsController.html","",""],["Admin::EventsController","","Admin/EventsController.html","",""],["Admin::PledgesController","","Admin/PledgesController.html","",""],["Admin::ReferralsController","","Admin/ReferralsController.html","",""],["Admin::RequestsController","","Admin/RequestsController.html","",""],["Admin::ReviewsController","","Admin/ReviewsController.html","",""],["Admin::TestimonialsController","","Admin/TestimonialsController.html","","<p>Controls testimonial management by admins, allowing them to create, edit,\nreorder, and delete testimonials. …\n"],["Admin::UsersController","","Admin/UsersController.html","",""],["AdminController","","AdminController.html","",""],["AdminHelper","","AdminHelper.html","",""],["AnnouncementMailer","","AnnouncementMailer.html","",""],["ApplicationController","","ApplicationController.html","",""],["ApplicationHelper","","ApplicationHelper.html","",""],["ApplicationMailer","","ApplicationMailer.html","",""],["ApplicationMailerHelper","","ApplicationMailerHelper.html","",""],["CampaignMailer","","CampaignMailer.html","",""],["CampaignTarget","","CampaignTarget.html","","<p>Represents a target for the CampaignMailer, for doing email promotions.\n"],["Donation","","Donation.html","","<p>Represents a donor’s granting of a student’s request (or stated intention\nto do so).\n"],["DonationsController","","DonationsController.html","",""],["ErrorsController","","ErrorsController.html","",""],["Event","","Event.html","","<p>Represents an action taken by the student or donor in the lifecycle of a\nRequest.\n"],["EventMailer","","EventMailer.html","",""],["FalseClass","","FalseClass.html","",""],["FlagsController","","FlagsController.html","",""],["ForbiddenException","","ForbiddenException.html","",""],["Geocoder","","Geocoder.html","",""],["Hash","","Hash.html","",""],["HomeController","","HomeController.html","",""],["Integer","","Integer.html","",""],["Location","","Location.html","","<p>Stores geocoder results for a User location. Used by the\nLocationsController to display a map of users. …\n"],["LocationsController","","LocationsController.html","",""],["Mailgun","","Mailgun.html","",""],["Mailgun::Base","","Mailgun/Base.html","",""],["Mailgun::Campaign","","Mailgun/Campaign.html","",""],["MessagesController","","MessagesController.html","",""],["MessagesHelper","","MessagesHelper.html","",""],["Metrics","","Metrics.html","","<p>Calculates metrics and user analytics for the site.\n"],["NilClass","","NilClass.html","",""],["PasswordsController","","PasswordsController.html","",""],["Pledge","","Pledge.html","","<p>Represents a pledge by a donor to donate a specific number of books.\n"],["ProfileController","","ProfileController.html","",""],["Referral","","Referral.html","","<p>Represents a referral from an external website to freeobjectivistbooks.org.\n<p>We create one of these in …\n"],["Reminder","","Reminder.html","","<p>Represents a reminder email sent to a user, e.g., when the ball is in their\ncourt to take the next action …\n"],["ReminderEntity","","ReminderEntity.html","","<p>Join class that tracks which Reminders were sent for which Donations,\nPledges, etc.\n"],["ReminderJob","","ReminderJob.html","",""],["ReminderMailer","","ReminderMailer.html","",""],["Reminders","","Reminders.html","",""],["Reminders::ConfirmReceipt","","Reminders/ConfirmReceipt.html","","<p>A reminder to a student to confirm receipt of the book when they get it.\n"],["Reminders::ConfirmReceiptUnsent","","Reminders/ConfirmReceiptUnsent.html","","<p>A note sent to a student when the donor hasn’t confirmed that they have\nsent the book. Asks if they have …\n"],["Reminders::FulfillPledge","","Reminders/FulfillPledge.html","","<p>Reminder to a donor to fulfill a Pledge.\n"],["Reminders::ReadBooks","","Reminders/ReadBooks.html","","<p>Reminder to a student to read their book and confirm that they have read\nit.\n"],["Reminders::SendBooks","","Reminders/SendBooks.html","","<p>Reminder to a donor to send the specific books that they have promised, if\nthey haven’t yet confirmed …\n"],["Request","","Request.html","","<p>Represents a student’s request for a given book.\n"],["RequestsController","","RequestsController.html","",""],["RequestsHelper","","RequestsHelper.html","",""],["Review","","Review.html","","<p>Represents a student’s answer to “What did you think?” of a given book,\nafter they have read …\n"],["SessionsController","","SessionsController.html","",""],["StatusesController","","StatusesController.html","",""],["String","","String.html","",""],["TestController","","TestController.html","",""],["Testimonial","","Testimonial.html","","<p>Represents a quote from a user that we feature on the site.\n<p>Testimonials are created and managed by admins. …\n"],["TestimonialsController","","TestimonialsController.html","","<p>Manages display of user testimonials and other quotes.\n"],["Time","","Time.html","",""],["TrueClass","","TrueClass.html","","<p>to_bool\n"],["UnauthorizedException","","UnauthorizedException.html","",""],["User","","User.html","","<p>Represents a user, either student or donor.\n"],["User::AuthTokenExpired","","User/AuthTokenExpired.html","",""],["User::AuthTokenInvalid","","User/AuthTokenInvalid.html","",""],["UserMailer","","UserMailer.html","",""],["UsersController","","UsersController.html","",""],["active?","Donation","Donation.html#method-i-active-3F","()","<p>Whether the donation is still active, i.e., not canceled.\n"],["active?","Request","Request.html#method-i-active-3F","()","<p>Whether the request is active (not canceled).\n"],["add","Mailgun::Base","Mailgun/Base.html#method-c-add","(object)",""],["address_components","Location","Location.html#method-i-address_components","()",""],["address_required?","Request","Request.html#method-i-address_required-3F","()","<p>Whether we’re going to require the student to enter an address the next\ntime they update this request. …\n"],["admin_user_link","AdminHelper","AdminHelper.html#method-i-admin_user_link","(user)",""],["all","Mailgun::Base","Mailgun/Base.html#method-c-all","()",""],["all_key_entities","Reminder","Reminder.html#method-c-all_key_entities","()",""],["all_key_entities","Reminders::ConfirmReceipt","Reminders/ConfirmReceipt.html#method-c-all_key_entities","()",""],["all_key_entities","Reminders::ConfirmReceiptUnsent","Reminders/ConfirmReceiptUnsent.html#method-c-all_key_entities","()",""],["all_key_entities","Reminders::FulfillPledge","Reminders/FulfillPledge.html#method-c-all_key_entities","()",""],["all_key_entities","Reminders::ReadBooks","Reminders/ReadBooks.html#method-c-all_key_entities","()",""],["all_key_entities","Reminders::SendBooks","Reminders/SendBooks.html#method-c-all_key_entities","()",""],["all_reminders","Reminder","Reminder.html#method-c-all_reminders","()",""],["allowed_users","ApplicationController","ApplicationController.html#method-i-allowed_users","()","<p>Specifies who can access this page. Subclasses can override this to return\na user or a list of users, …\n"],["allowed_users","DonationsController","DonationsController.html#method-i-allowed_users","()","<p>Filters\n"],["allowed_users","FlagsController","FlagsController.html#method-i-allowed_users","()",""],["allowed_users","MessagesController","MessagesController.html#method-i-allowed_users","()",""],["allowed_users","RequestsController","RequestsController.html#method-i-allowed_users","()",""],["allowed_users","StatusesController","StatusesController.html#method-i-allowed_users","()","<p>Filters\n"],["announcement","AnnouncementMailer","AnnouncementMailer.html#method-i-announcement","(subject, options = {})",""],["attributes","Mailgun::Base","Mailgun/Base.html#method-i-attributes","()",""],["attributes=","Mailgun::Base","Mailgun/Base.html#method-i-attributes-3D","(attributes)",""],["auth_token","User","User.html#method-i-auth_token","(timestamp = Time.now)",""],["authenticate","User","User.html#method-i-authenticate","(password)",""],["base_url","Geocoder","Geocoder.html#method-c-base_url","()",""],["base_url","Mailgun::Base","Mailgun/Base.html#method-c-base_url","()",""],["book_leaderboard","Metrics","Metrics.html#method-i-book_leaderboard","()",""],["breakdown_by_time","Metrics","Metrics.html#method-i-breakdown_by_time","(relation, timestamp_column = :created_at)",""],["build_update_event","Request","Request.html#method-i-build_update_event","()",""],["campaign_for_method","ApplicationMailer","ApplicationMailer.html#method-c-campaign_for_method","(method)",""],["campaign_limit_error?","Mailgun::Campaign","Mailgun/Campaign.html#method-c-campaign_limit_error-3F","(e)",""],["can_cancel?","Donation","Donation.html#method-i-can_cancel-3F","(user)","<p>True if the given user can cancel the donation.\n"],["can_cancel?","Request","Request.html#method-i-can_cancel-3F","()","<p>Whether we will show the student the option to cancel the request.\n"],["can_flag?","Donation","Donation.html#method-i-can_flag-3F","()","<p>True if we should show the “flag” link to the donor.\n"],["can_request?","User","User.html#method-i-can_request-3F","()",""],["can_send?","Donation","Donation.html#method-i-can_send-3F","()","<p>True if we should show the “sent” button to the donor.\n"],["can_send?","Reminder","Reminder.html#method-i-can_send-3F","()",""],["can_update?","Request","Request.html#method-i-can_update-3F","()",""],["cancel","Donation","Donation.html#method-i-cancel","(params, user)",""],["cancel","DonationsController","DonationsController.html#method-i-cancel","()",""],["cancel","Request","Request.html#method-i-cancel","(params = {})",""],["cancel","RequestsController","RequestsController.html#method-i-cancel","()",""],["cancel_donation_event","EventMailer","EventMailer.html#method-i-cancel_donation_event","(event)",""],["cancel_request_event","EventMailer","EventMailer.html#method-i-cancel_request_event","(event)",""],["check_user","ApplicationController","ApplicationController.html#method-i-check_user","()","<p>Invokes render_forbidden if there are allowed_users and the current user is\nnot one of them. Automatically …\n"],["client","Geocoder","Geocoder.html#method-c-client","()",""],["client","Mailgun::Base","Mailgun/Base.html#method-c-client","()",""],["client","Mailgun::Base","Mailgun/Base.html#method-i-client","()",""],["confirm_receipt","ReminderMailer","ReminderMailer.html#method-i-confirm_receipt","(reminder)",""],["confirm_receipt_unsent","ReminderMailer","ReminderMailer.html#method-i-confirm_receipt_unsent","(reminder)",""],["count_digits","ApplicationHelper","ApplicationHelper.html#method-i-count_digits","(number)",""],["count_referrals","Metrics","Metrics.html#method-i-count_referrals","(model)",""],["country","Location","Location.html#method-i-country","()",""],["create","Admin::CampaignTargetsController","Admin/CampaignTargetsController.html#method-i-create","()",""],["create","Admin::TestimonialsController","Admin/TestimonialsController.html#method-i-create","()",""],["create","DonationsController","DonationsController.html#method-i-create","()",""],["create","FlagsController","FlagsController.html#method-i-create","()",""],["create","Mailgun::Base","Mailgun/Base.html#method-c-create","(attributes)",""],["create","Mailgun::Base","Mailgun/Base.html#method-i-create","()",""],["create","MessagesController","MessagesController.html#method-i-create","()",""],["create","RequestsController","RequestsController.html#method-i-create","()",""],["create","SessionsController","SessionsController.html#method-i-create","()",""],["create","UsersController","UsersController.html#method-i-create","()",""],["create_location_if_needed","User","User.html#method-i-create_location_if_needed","()",""],["current_donation","RequestsHelper","RequestsHelper.html#method-i-current_donation","()",""],["current_donor","RequestsHelper","RequestsHelper.html#method-i-current_donor","()",""],["current_is_donor?","RequestsHelper","RequestsHelper.html#method-i-current_is_donor-3F","()",""],["current_is_student?","RequestsHelper","RequestsHelper.html#method-i-current_is_student-3F","()",""],["current_request","RequestsHelper","RequestsHelper.html#method-i-current_request","()",""],["current_student","RequestsHelper","RequestsHelper.html#method-i-current_student","()",""],["default_user","Event","Event.html#method-i-default_user","()",""],["destroy","Admin::CampaignTargetsController","Admin/CampaignTargetsController.html#method-i-destroy","()",""],["destroy","Admin::TestimonialsController","Admin/TestimonialsController.html#method-i-destroy","()",""],["destroy","Admin::UsersController","Admin/UsersController.html#method-i-destroy","()",""],["destroy","DonationsController","DonationsController.html#method-i-destroy","()",""],["destroy","FlagsController","FlagsController.html#method-i-destroy","()",""],["destroy","Mailgun::Base","Mailgun/Base.html#method-i-destroy","()",""],["destroy","RequestsController","RequestsController.html#method-i-destroy","()",""],["destroy","SessionsController","SessionsController.html#method-i-destroy","()",""],["donate","UsersController","UsersController.html#method-i-donate","()",""],["donation","Reminder","Reminder.html#method-i-donation","()",""],["donation_metrics","Metrics","Metrics.html#method-i-donation_metrics","()",""],["donation_status","StatusesController","StatusesController.html#method-i-donation_status","()",""],["donation_summary","ApplicationHelper","ApplicationHelper.html#method-i-donation_summary","(donation)",""],["donor","Donation","Donation.html#method-i-donor","()","<p>Alias for the user who made the donation.\n"],["donor","Event","Event.html#method-i-donor","()",""],["donor","Request","Request.html#method-i-donor","()","<p>Current donor who is going to grant this request, if any.\n"],["donor_can_cancel?","Donation","Donation.html#method-i-donor_can_cancel-3F","()","<p>True if the donor can cancel the donation.\n"],["donor_cannot_be_requester","Donation","Donation.html#method-i-donor_cannot_be_requester","()",""],["donors_with_unsent_books","User","User.html#method-c-donors_with_unsent_books","()",""],["edit","Admin::TestimonialsController","Admin/TestimonialsController.html#method-i-edit","()",""],["edit","RequestsController","RequestsController.html#method-i-edit","()",""],["edit","StatusesController","StatusesController.html#method-i-edit","()","<p>Actions\n"],["event_detail","DonationsController","DonationsController.html#method-i-event_detail","()",""],["exception","TestController","TestController.html#method-i-exception","()",""],["find","Mailgun::Base","Mailgun/Base.html#method-c-find","(id)",""],["find_by_auth_token","User","User.html#method-c-find_by_auth_token","(token, expiration = AUTH_TOKEN_EXPIRATION)",""],["find_by_email","User","User.html#method-c-find_by_email","(email)",""],["find_current_user","ApplicationController","ApplicationController.html#method-i-find_current_user","()","<p>Loads the current user from the session. Automatically invoked before all\nrequests.\n"],["find_or_create","Mailgun::Campaign","Mailgun/Campaign.html#method-c-find_or_create","(attributes)",""],["first_geocoder_result","Location","Location.html#method-i-first_geocoder_result","()",""],["fix","Donation","Donation.html#method-i-fix","(attributes, event_attributes = {})",""],["fix","FlagsController","FlagsController.html#method-i-fix","()",""],["fix_event","EventMailer","EventMailer.html#method-i-fix_event","(event)",""],["flag","Donation","Donation.html#method-i-flag","(params)",""],["flag_event","EventMailer","EventMailer.html#method-i-flag_event","(event)",""],["flag_message","Donation","Donation.html#method-i-flag_message","()","<p>The message from the donor the last time the donor flagged the request, if\nany.\n"],["format_address","ApplicationHelper","ApplicationHelper.html#method-i-format_address","(address)",""],["format_block","ApplicationHelper","ApplicationHelper.html#method-i-format_block","(text)","<p>Generic formatting\n"],["format_number","ApplicationHelper","ApplicationHelper.html#method-i-format_number","(number, precision = 2)",""],["formatted_address","Location","Location.html#method-i-formatted_address","()",""],["from","Event","Event.html#method-i-from","()",""],["from_donor?","Event","Event.html#method-i-from_donor-3F","()",""],["from_student?","Event","Event.html#method-i-from_student-3F","()",""],["fulfill_pledge","ReminderMailer","ReminderMailer.html#method-i-fulfill_pledge","(reminder)","<p>Reminder types\n"],["fulfilled?","Pledge","Pledge.html#method-i-fulfilled-3F","()","<p>Determines if the donor has donated at least as many books as pledged.\n"],["geocode","Geocoder","Geocoder.html#method-c-geocode","(address)",""],["geocode!","Location","Location.html#method-i-geocode-21","()",""],["geometry","Location","Location.html#method-i-geometry","()",""],["grant","Request","Request.html#method-i-grant","(user)","<p>Grants the request, with the given user as the donor. Returns a new\n(unsaved) grant event.\n"],["grant_event","EventMailer","EventMailer.html#method-i-grant_event","(event)",""],["granted?","Request","Request.html#method-i-granted-3F","()","<p>Whether the request has been granted, i.e., has a current donor.\n"],["has_more?","ApplicationHelper","ApplicationHelper.html#method-i-has_more-3F","()","<p>Pagination\n"],["home","HomeController","HomeController.html#method-i-home","()",""],["in_transit?","Donation","Donation.html#method-i-in_transit-3F","()","<p>True if the book has been sent but not yet received.\n"],["index","Admin::CampaignTargetsController","Admin/CampaignTargetsController.html#method-i-index","()",""],["index","Admin::EventsController","Admin/EventsController.html#method-i-index","()",""],["index","Admin::PledgesController","Admin/PledgesController.html#method-i-index","()",""],["index","Admin::ReferralsController","Admin/ReferralsController.html#method-i-index","()",""],["index","Admin::RequestsController","Admin/RequestsController.html#method-i-index","()",""],["index","Admin::ReviewsController","Admin/ReviewsController.html#method-i-index","()",""],["index","Admin::TestimonialsController","Admin/TestimonialsController.html#method-i-index","()",""],["index","Admin::UsersController","Admin/UsersController.html#method-i-index","()",""],["index","AdminController","AdminController.html#method-i-index","()",""],["index","DonationsController","DonationsController.html#method-i-index","()","<p>Actions\n"],["index","HomeController","HomeController.html#method-i-index","()",""],["index","LocationsController","LocationsController.html#method-i-index","()",""],["index","RequestsController","RequestsController.html#method-i-index","()","<p>Actions\n"],["index","TestimonialsController","TestimonialsController.html#method-i-index","()",""],["is_duplicate?","User","User.html#method-i-is_duplicate-3F","()",""],["key_entity","Reminder","Reminder.html#method-i-key_entity","()",""],["key_entity","Reminders::ConfirmReceipt","Reminders/ConfirmReceipt.html#method-i-key_entity","()",""],["key_entity","Reminders::ConfirmReceiptUnsent","Reminders/ConfirmReceiptUnsent.html#method-i-key_entity","()",""],["key_entity","Reminders::FulfillPledge","Reminders/FulfillPledge.html#method-i-key_entity","()",""],["key_entity","Reminders::ReadBooks","Reminders/ReadBooks.html#method-i-key_entity","()",""],["key_entity","Reminders::SendBooks","Reminders/SendBooks.html#method-i-key_entity","()",""],["last","Mailgun::Campaign","Mailgun/Campaign.html#method-c-last","()",""],["lat","Location","Location.html#method-i-lat","()",""],["latest_reminder","Reminder","Reminder.html#method-i-latest_reminder","()",""],["limit_and_offset","ApplicationController","ApplicationController.html#method-i-limit_and_offset","(relation, default_limit = 100)",""],["load","Mailgun::Base","Mailgun/Base.html#method-i-load","()",""],["load_models","Admin::TestimonialsController","Admin/TestimonialsController.html#method-i-load_models","()",""],["load_models","ApplicationController","ApplicationController.html#method-i-load_models","()","<p>Loads the main model, if any, from the id parameter, along with some other\nmodels commonly used by controllers. …\n"],["load_models","TestimonialsController","TestimonialsController.html#method-i-load_models","()",""],["load_models","UsersController","UsersController.html#method-i-load_models","()",""],["locality?","Location","Location.html#method-i-locality-3F","()",""],["location","Location","Location.html#method-i-location","()",""],["log","Event","Event.html#method-i-log","()",""],["logger","ReminderJob","ReminderJob.html#method-i-logger","()",""],["login","User","User.html#method-c-login","(email, password)",""],["lon","Location","Location.html#method-i-lon","()",""],["mail_for_event","EventMailer","EventMailer.html#method-c-mail_for_event","(event)",""],["mail_to_user","ApplicationMailer","ApplicationMailer.html#method-i-mail_to_user","(user, options)",""],["mark_read_books","AnnouncementMailer","AnnouncementMailer.html#method-i-mark_read_books","(donation)",""],["mark_received_books","AnnouncementMailer","AnnouncementMailer.html#method-i-mark_received_books","(request)",""],["mark_sent_books","AnnouncementMailer","AnnouncementMailer.html#method-i-mark_sent_books","(user)",""],["markdown","ApplicationHelper","ApplicationHelper.html#method-i-markdown","(text)",""],["markdown_renderer","ApplicationHelper","ApplicationHelper.html#method-i-markdown_renderer","()","<p>Markdown\n"],["max_reminders","Reminder","Reminder.html#method-i-max_reminders","()",""],["max_reminders","Reminders::ConfirmReceipt","Reminders/ConfirmReceipt.html#method-i-max_reminders","()",""],["max_reminders","Reminders::ConfirmReceiptUnsent","Reminders/ConfirmReceiptUnsent.html#method-i-max_reminders","()",""],["max_reminders","Reminders::FulfillPledge","Reminders/FulfillPledge.html#method-i-max_reminders","()",""],["max_reminders","Reminders::ReadBooks","Reminders/ReadBooks.html#method-i-max_reminders","()",""],["max_reminders","Reminders::SendBooks","Reminders/SendBooks.html#method-i-max_reminders","()",""],["message_event","EventMailer","EventMailer.html#method-i-message_event","(event)",""],["message_or_detail_must_be_present","Event","Event.html#method-i-message_or_detail_must_be_present","()",""],["min_interval","Reminder","Reminder.html#method-i-min_interval","()",""],["min_interval","Reminders::ConfirmReceipt","Reminders/ConfirmReceipt.html#method-i-min_interval","()",""],["min_interval","Reminders::ConfirmReceiptUnsent","Reminders/ConfirmReceiptUnsent.html#method-i-min_interval","()",""],["min_interval","Reminders::FulfillPledge","Reminders/FulfillPledge.html#method-i-min_interval","()",""],["min_interval","Reminders::ReadBooks","Reminders/ReadBooks.html#method-i-min_interval","()",""],["min_interval","Reminders::SendBooks","Reminders/SendBooks.html#method-i-min_interval","()",""],["more_link","ApplicationHelper","ApplicationHelper.html#method-i-more_link","()",""],["name_must_have_proper_format","User","User.html#method-i-name_must_have_proper_format","()",""],["needs_address?","Donation","Donation.html#method-i-needs_address-3F","()","<p>Whether we’re going to require the student to enter an address the next\ntime they update the associated …\n"],["needs_fix?","Donation","Donation.html#method-i-needs_fix-3F","()","<p>Whether the donation has been flagged for the student to respond.\n"],["needs_sending?","Donation","Donation.html#method-i-needs_sending-3F","()","<p>True if the ball is in the donor’s court to send the book.\n"],["needs_thanks?","Request","Request.html#method-i-needs_thanks-3F","()","<p>Whether we should prompt the student to thank their donor.\n"],["new","Admin::TestimonialsController","Admin/TestimonialsController.html#method-i-new","()",""],["new","ApplicationController","ApplicationController.html#method-c-new","()",""],["new","FlagsController","FlagsController.html#method-i-new","()",""],["new","Mailgun::Base","Mailgun/Base.html#method-c-new","(attributes = {})",""],["new","MessagesController","MessagesController.html#method-i-new","()",""],["new","RequestsController","RequestsController.html#method-i-new","()",""],["new_for_entity","Reminder","Reminder.html#method-c-new_for_entity","(donation)",""],["new_for_entity","Reminders::ConfirmReceipt","Reminders/ConfirmReceipt.html#method-c-new_for_entity","(donation)",""],["new_for_entity","Reminders::ConfirmReceiptUnsent","Reminders/ConfirmReceiptUnsent.html#method-c-new_for_entity","(donation)",""],["new_for_entity","Reminders::FulfillPledge","Reminders/FulfillPledge.html#method-c-new_for_entity","(pledge)",""],["new_for_entity","Reminders::ReadBooks","Reminders/ReadBooks.html#method-c-new_for_entity","(donation)",""],["new_for_entity","Reminders::SendBooks","Reminders/SendBooks.html#method-c-new_for_entity","(user)",""],["noop","TestController","TestController.html#method-i-noop","()",""],["not_found","ErrorsController","ErrorsController.html#method-i-not_found","()",""],["notice","StatusesController","StatusesController.html#method-i-notice","()",""],["notification","EventMailer","EventMailer.html#method-i-notification","(subject, options = {})",""],["notified","Event","Event.html#method-i-notified","()",""],["notified!","Event","Event.html#method-i-notified-21","()",""],["notified?","Event","Event.html#method-i-notified-3F","()",""],["notify","Event","Event.html#method-i-notify","()",""],["now","Metrics","Metrics.html#method-i-now","()",""],["open?","Request","Request.html#method-i-open-3F","()","<p>Whether the request is still open, i.e., doesn’t have a current donor.\n"],["other_user","RequestsHelper","RequestsHelper.html#method-i-other_user","()",""],["parse_params","Admin::EventsController","Admin/EventsController.html#method-i-parse_params","()",""],["parse_params","ApplicationController","ApplicationController.html#method-i-parse_params","()","<p>By convention, extracts values from params, parses them if needed, and\nstores them in ivars, e.g.:\n\n<pre>@public ...</pre>\n"],["parse_params","PasswordsController","PasswordsController.html#method-i-parse_params","()",""],["parse_params","RequestsController","RequestsController.html#method-i-parse_params","()","<p>Filters\n"],["parse_params","SessionsController","SessionsController.html#method-i-parse_params","()",""],["password","Mailgun::Base","Mailgun/Base.html#method-c-password","()",""],["password=","User","User.html#method-i-password-3D","(password)",""],["past_reminder_count","Reminder","Reminder.html#method-i-past_reminder_count","()",""],["path","Mailgun::Base","Mailgun/Base.html#method-c-path","()",""],["perform","ReminderJob","ReminderJob.html#method-i-perform","()",""],["pipeline_breakdown","Metrics","Metrics.html#method-i-pipeline_breakdown","()",""],["pledge","Reminder","Reminder.html#method-i-pledge","()",""],["pledge_metrics","Metrics","Metrics.html#method-i-pledge_metrics","()",""],["pledge_referrals","Metrics","Metrics.html#method-i-pledge_referrals","()",""],["pluralize_omit_1","ApplicationHelper","ApplicationHelper.html#method-i-pluralize_omit_1","(count, noun)",""],["pluralize_omit_number","ApplicationHelper","ApplicationHelper.html#method-i-pluralize_omit_number","(count, noun)",""],["populate","Event","Event.html#method-i-populate","()",""],["populate","Review","Review.html#method-i-populate","()",""],["prune_campaigns","Mailgun::Campaign","Mailgun/Campaign.html#method-c-prune_campaigns","()",""],["prune_if_needed_and_add","Mailgun::Campaign","Mailgun/Campaign.html#method-c-prune_if_needed_and_add","(campaign)",""],["prune_if_needed_and_create","Mailgun::Campaign","Mailgun/Campaign.html#method-c-prune_if_needed_and_create","(attributes)",""],["read","UsersController","UsersController.html#method-i-read","()",""],["read?","Donation","Donation.html#method-i-read-3F","()","<p>True if the book has been read.\n"],["read_at","Donation","Donation.html#method-i-read_at","()","<p>The time the book was confirmed read, if any.\n"],["read_books","ReminderMailer","ReminderMailer.html#method-i-read_books","(reminder)",""],["reading?","Donation","Donation.html#method-i-reading-3F","()","<p>True if the book has been received but not yet read.\n"],["reason","DonationsController","DonationsController.html#method-i-reason","()",""],["received?","Donation","Donation.html#method-i-received-3F","()","<p>True if the book has been received.\n"],["received_at","Donation","Donation.html#method-i-received_at","()","<p>The time the book was confirmed received, if any.\n"],["redirect_destination","StatusesController","StatusesController.html#method-i-redirect_destination","()",""],["referral_counts","Metrics","Metrics.html#method-i-referral_counts","()",""],["referral_metrics","Metrics","Metrics.html#method-i-referral_metrics","(key)",""],["referral_metrics_keys","Metrics","Metrics.html#method-i-referral_metrics_keys","()",""],["reminder_mail","ReminderMailer","ReminderMailer.html#method-i-reminder_mail","(subject)",""],["render_error","ApplicationController","ApplicationController.html#method-i-render_error","(exception)","<p>Renders an HTTP 500 Internal Server Error response for HTML or JSON.\nInvoked on all uncaught exceptions. …\n"],["render_forbidden","ApplicationController","ApplicationController.html#method-i-render_forbidden","()","<p>Renders an HTTP 403 Forbidden response for HTML or JSON.\n"],["render_form","MessagesController","MessagesController.html#method-i-render_form","()",""],["render_not_found","ApplicationController","ApplicationController.html#method-i-render_not_found","()","<p>Renders an HTTP 404 Not Found response for HTML or JSON.\n"],["render_unauthorized","ApplicationController","ApplicationController.html#method-i-render_unauthorized","()","<p>Renders an HTTP 401 Unauthorized response for HTML or JSON.\n"],["reply_to_thanks","AnnouncementMailer","AnnouncementMailer.html#method-i-reply_to_thanks","(event)",""],["request_pipeline","Metrics","Metrics.html#method-i-request_pipeline","()",""],["request_referrals","Metrics","Metrics.html#method-i-request_referrals","()",""],["request_reset","PasswordsController","PasswordsController.html#method-i-request_reset","()",""],["request_summary","ApplicationHelper","ApplicationHelper.html#method-i-request_summary","(request)",""],["require_can_cancel","DonationsController","DonationsController.html#method-i-require_can_cancel","()",""],["require_can_request","RequestsController","RequestsController.html#method-i-require_can_request","()",""],["require_login","ApplicationController","ApplicationController.html#method-i-require_login","()","<p>Invokes render_unauthorized if there is no current logged-in user. Optional\nbefore_filter that subclasses …\n"],["require_status","StatusesController","StatusesController.html#method-i-require_status","()",""],["require_unsent_for_cancel","RequestsController","RequestsController.html#method-i-require_unsent_for_cancel","()",""],["requires_message?","Event","Event.html#method-i-requires_message-3F","()",""],["reset_password","UserMailer","UserMailer.html#method-i-reset_password","(user)",""],["save","ApplicationController","ApplicationController.html#method-i-save","(*models)","<p>Saves a set of models. Validates <strong>all</strong> models before saving\n<strong>any</strong> of them.\n"],["schedule_reminders","ReminderJob","ReminderJob.html#method-c-schedule_reminders","()",""],["search","User","User.html#method-c-search","(query)",""],["seen_signup","UsersController","UsersController.html#method-i-seen_signup","()",""],["send_all_reminders","ReminderJob","ReminderJob.html#method-c-send_all_reminders","()",""],["send_all_reminders","ReminderJob","ReminderJob.html#method-i-send_all_reminders","()",""],["send_books","ReminderMailer","ReminderMailer.html#method-i-send_books","(reminder)",""],["send_campaign","ApplicationMailer","ApplicationMailer.html#method-c-send_campaign","(method, targets)",""],["send_campaign_to_group","CampaignMailer","CampaignMailer.html#method-c-send_campaign_to_group","(campaign, group)",""],["send_campaign_to_target","CampaignMailer","CampaignMailer.html#method-c-send_campaign_to_target","(campaign, target)",""],["send_reminders","ReminderJob","ReminderJob.html#method-i-send_reminders","(type)",""],["send_to_target","ApplicationMailer","ApplicationMailer.html#method-c-send_to_target","(method, target)",""],["send_to_target","ReminderMailer","ReminderMailer.html#method-c-send_to_target","(method, reminder)",""],["sent?","Donation","Donation.html#method-i-sent-3F","()","<p>True if the book has been sent. (This is not the same as status = sent,\nsince it is still true after …\n"],["sent_at","Donation","Donation.html#method-i-sent_at","()","<p>The time the book was confirmed sent, if any.\n"],["set_current_user","ApplicationController","ApplicationController.html#method-i-set_current_user","(user)","<p>Sets the current user in the session.\n"],["show","Admin::DonationsController","Admin/DonationsController.html#method-i-show","()",""],["show","ProfileController","ProfileController.html#method-i-show","()",""],["since","Time","Time.html#method-c-since","(datetime)",""],["site","Mailgun::Base","Mailgun/Base.html#method-c-site","()",""],["spoof","Admin::UsersController","Admin/UsersController.html#method-i-spoof","()",""],["status","Donation","Donation.html#method-i-status","()","<p>Status of the donation: not_sent, sent, received, or read, as a\nStringInquirer.\n"],["status","Request","Request.html#method-i-status","()","<p>The Donation#status, if any.\n"],["status","StatusesController","StatusesController.html#method-i-status","()",""],["status_detail","ApplicationHelper","ApplicationHelper.html#method-i-status_detail","(request)",""],["status_headline","ApplicationHelper","ApplicationHelper.html#method-i-status_headline","(request)",""],["store_referral","ApplicationController","ApplicationController.html#method-i-store_referral","()","<p>Creates a Referral object to track this referral/landing; stores it in the\nsession so it can be associated …\n"],["stub","Mailgun::Base","Mailgun/Base.html#method-c-stub","(object)",""],["student","Donation","Donation.html#method-i-student","()","<p>Student the donation is for.\n"],["student","Event","Event.html#method-i-student","()",""],["student","Request","Request.html#method-i-student","()","<p>Alias for the user who created the request.\n"],["student_can_cancel?","Donation","Donation.html#method-i-student_can_cancel-3F","()","<p>True if the student is allowed to cancel the donation.\n"],["student_club_announcement","CampaignMailer","CampaignMailer.html#method-i-student_club_announcement","(target)",""],["subhash","Hash","Hash.html#method-i-subhash","(*keys)",""],["tag","Referral","Referral.html#method-i-tag","()",""],["thank_your_donor","AnnouncementMailer","AnnouncementMailer.html#method-i-thank_your_donor","(request)",""],["time_columns","Metrics","Metrics.html#method-i-time_columns","()",""],["times","Metrics","Metrics.html#method-i-times","()",""],["title","ApplicationHelper","ApplicationHelper.html#method-i-title","(book)",""],["to","Event","Event.html#method-i-to","()",""],["to_bool","FalseClass","FalseClass.html#method-i-to_bool","()",""],["to_bool","Integer","Integer.html#method-i-to_bool","()",""],["to_bool","NilClass","NilClass.html#method-i-to_bool","()",""],["to_bool","String","String.html#method-i-to_bool","()",""],["to_bool","TrueClass","TrueClass.html#method-i-to_bool","()",""],["to_donor?","Event","Event.html#method-i-to_donor-3F","()",""],["to_s","Reminder","Reminder.html#method-i-to_s","()",""],["to_student?","Event","Event.html#method-i-to_student-3F","()",""],["to_testimonial","Event","Event.html#method-i-to_testimonial","()",""],["to_testimonial","Pledge","Pledge.html#method-i-to_testimonial","()","<p>Creates a Testimonial based on this pledge and its “reason” text.\n"],["to_testimonial","Review","Review.html#method-i-to_testimonial","()","<p>Creates a Testimonial based on this review.\n"],["too_soon?","Reminder","Reminder.html#method-i-too_soon-3F","()",""],["too_soon?","Reminders::ConfirmReceipt","Reminders/ConfirmReceipt.html#method-i-too_soon-3F","()",""],["too_soon?","Reminders::ConfirmReceiptUnsent","Reminders/ConfirmReceiptUnsent.html#method-i-too_soon-3F","()",""],["too_soon?","Reminders::FulfillPledge","Reminders/FulfillPledge.html#method-i-too_soon-3F","()",""],["too_soon?","Reminders::ReadBooks","Reminders/ReadBooks.html#method-i-too_soon-3F","()",""],["touch_device?","ApplicationHelper","ApplicationHelper.html#method-i-touch_device-3F","()","<p>User agent\n"],["type_name","Reminder","Reminder.html#method-c-type_name","()",""],["types","Location","Location.html#method-i-types","()",""],["unfulfilled","Pledge","Pledge.html#method-c-unfulfilled","()","<p>Returns all unfulfilled pledges.\n"],["until","Time","Time.html#method-c-until","(datetime)",""],["update","Admin::TestimonialsController","Admin/TestimonialsController.html#method-i-update","()",""],["update","Admin::UsersController","Admin/UsersController.html#method-i-update","()",""],["update","PasswordsController","PasswordsController.html#method-i-update","()",""],["update","RequestsController","RequestsController.html#method-i-update","()",""],["update","StatusesController","StatusesController.html#method-i-update","()",""],["update_detail","User","User.html#method-i-update_detail","()",""],["update_event","EventMailer","EventMailer.html#method-i-update_event","(event)",""],["update_status","Donation","Donation.html#method-i-update_status","(params, time = Time.now)",""],["update_status_event","EventMailer","EventMailer.html#method-i-update_status_event","(event)",""],["update_thanked","Event","Event.html#method-i-update_thanked","()",""],["updated_at_for_status","Donation","Donation.html#method-i-updated_at_for_status","(status)",""],["user","Mailgun::Base","Mailgun/Base.html#method-c-user","()",""],["user_referrals","Metrics","Metrics.html#method-i-user_referrals","()",""],["user_tagline","ApplicationHelper","ApplicationHelper.html#method-i-user_tagline","(user)","<p>Model-specific formatting\n"],["validate_auth","PasswordsController","PasswordsController.html#method-i-validate_auth","()",""],["verifier","User","User.html#method-c-verifier","()",""],["words","String","String.html#method-i-words","()",""],["README_FOR_APP","","doc/README_FOR_APP.html","","<p>Use this README file to introduce your application and point to useful\nplaces in the API for learning …\n"]]}}